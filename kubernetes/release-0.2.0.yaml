apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: fuxi
  name: fuxi
---
apiVersion: v1
kind: Namespace
metadata:
  name: tekton-pipelines
---
apiVersion: v1
kind: Namespace
metadata:
  name: tekton-store
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: yamecloud
  name: yamecloud
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: basedepartments.yamecloud.io
spec:
  group: yamecloud.io
  names:
    kind: BaseDepartment
    listKind: BaseDepartmentList
    plural: basedepartments
    singular: basedepartment
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: BaseDepartment is the Schema for the basedepartments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BaseDepartmentSpec defines the desired state of BaseDepartment
            properties:
              gits:
                description: DefaultNamespace string `json:"defaultNamespace,omitempty"`
                items:
                  properties:
                    address:
                      type: string
                    password:
                      type: string
                    token:
                      type: string
                    user:
                      type: string
                    verification:
                      type: string
                  type: object
                type: array
              namespaces:
                items:
                  type: string
                type: array
              owner:
                type: string
              registers:
                items:
                  properties:
                    address:
                      type: string
                    password:
                      type: string
                    token:
                      type: string
                    user:
                      type: string
                    verification:
                      type: string
                  type: object
                type: array
              tenant_id:
                type: string
            type: object
          status:
            description: BaseDepartmentStatus defines the observed state of BaseDepartment
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: baseroles.yamecloud.io
spec:
  group: yamecloud.io
  names:
    kind: BaseRole
    listKind: BaseRoleList
    plural: baseroles
    singular: baserole
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: BaseRole is the Schema for the baseroles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BaseRoleSpec defines the desired state of BaseRole
            properties:
              comment:
                type: string
              department_id:
                type: string
              namespaces:
                items:
                  type: string
                type: array
              privilege:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
              tenant_id:
                type: string
            type: object
          status:
            description: BaseRoleStatus defines the observed state of BaseRole
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: baseroleusers.yamecloud.io
spec:
  group: yamecloud.io
  names:
    kind: BaseRoleUser
    listKind: BaseRoleUserList
    plural: baseroleusers
    singular: baseroleuser
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: BaseRoleUser is the Schema for the baseroleusers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BaseRoleUserSpec defines the desired state of BaseRoleUser
            properties:
              role_id:
                type: string
              user_id:
                type: string
            type: object
          status:
            description: BaseRoleUserStatus defines the observed state of BaseRoleUser
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: basetenants.yamecloud.io
spec:
  group: yamecloud.io
  names:
    kind: BaseTenant
    listKind: BaseTenantList
    plural: basetenants
    singular: basetenant
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: BaseTenant is the Schema for the basetents API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BaseTenant defines the desired state of BaseTenant
            properties:
              name:
                type: string
              namespaces:
                items:
                  type: string
                type: array
              owner:
                type: string
            type: object
          status:
            description: BaseTenantStatus defines the observed state of BaseTenant
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: baseusers.yamecloud.io
spec:
  group: yamecloud.io
  names:
    kind: BaseUser
    listKind: BaseUserList
    plural: baseusers
    singular: baseuser
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: BaseUser is the Schema for the baseusers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BaseUserSpec defines the desired state of BaseUser
            properties:
              department_id:
                type: string
              display:
                type: string
              email:
                type: string
              is_tenant_owner:
                type: boolean
              name:
                type: string
              password:
                type: string
              roles:
                items:
                  type: string
                type: array
              tenant_id:
                type: string
            type: object
          status:
            description: BaseUserStatus defines the observed state of BaseUser
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: globalconfigs.yamecloud.io
spec:
  group: yamecloud.io
  names:
    kind: GlobalConfig
    listKind: GlobalConfigList
    plural: globalconfigs
    singular: globalconfig
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: GlobalConfig is the Schema for the GlobalConfig API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GlobalConfig defines the desired state of GlobalConfig
            properties:
              helmRepos:
                additionalProperties:
                  type: string
                type: object
              model:
                type: string
            type: object
          status:
            description: GlobalConfigStatus defines the observed state of BaseRole
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: tektongraphs.yamecloud.io
spec:
  group: yamecloud.io
  names:
    kind: TektonGraph
    listKind: TektonGraphList
    plural: tektongraphs
    singular: tektongraph
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TektonGraph is the Schema for the tektongraphs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TektonGraphSpec defines the desired state of TektonGraph
            properties:
              data:
                type: string
              height:
                format: int32
                type: integer
              width:
                format: int32
                type: integer
            type: object
          status:
            description: TektonGraphStatus defines the observed state of TektonGraph
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: tektonstores.yamecloud.io
spec:
  group: yamecloud.io
  names:
    kind: TektonStore
    listKind: TektonStoreList
    plural: tektonstores
    singular: tektonstore
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TektonStore is the Schema for the tektonstores API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TektonStoreSpec defines the desired state of TektonStore
            properties:
              author:
                type: string
              data:
                type: string
              forks:
                format: int32
                type: integer
              paramsDescription:
                type: string
              tektonResourceType:
                type: string
            required:
            - author
            - data
            - forks
            - paramsDescription
            - tektonResourceType
            type: object
          status:
            description: TektonStoreStatus defines the observed state of TektonStore
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: tektonwebhooks.yamecloud.io
spec:
  group: yamecloud.io
  names:
    kind: TektonWebHook
    listKind: TektonWebHookList
    plural: tektonwebhooks
    singular: tektonwebhook
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TektonWebHook is the Schema for the tektonwebhooks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TektonWebHookSpec defines the desired state of TektonWebHook
            properties:
              git:
                type: string
              jobs:
                items:
                  properties:
                    branch:
                      type: string
                    params:
                      items:
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                    pipeline_run:
                      type: string
                  type: object
                type: array
              secret:
                type: string
            type: object
          status:
            description: TektonWebHookStatus defines the observed state of TektonWebHook
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: workloads.yamecloud.io
spec:
  group: yamecloud.io
  names:
    kind: Workloads
    listKind: WorkloadsList
    plural: workloads
    singular: workloads
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Workloads is the Schema for the workloads API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkloadsSpec defines the desired state of Workloads
            properties:
              appName:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "operator-sdk generate k8s" to regenerate code after
                  modifying this file Add custom validation using kubebuilder tags:
                  https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html
                  Workloads ResourceType [Deployment,Statefulset...]'
                type: string
              metadata:
                type: string
              resourceType:
                type: string
              service:
                type: string
              volumeClaims:
                type: string
            required:
            - appName
            - metadata
            - resourceType
            - service
            - volumeClaims
            type: object
          status:
            description: WorkloadsStatus defines the observed state of Workloads
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clustertasks.tekton.dev
spec:
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: ClusterTask
    plural: clustertasks
  scope: Cluster
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: conditions.tekton.dev
spec:
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: Condition
    plural: conditions
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/crd-install: "true"
  name: images.caching.internal.knative.dev
spec:
  group: caching.internal.knative.dev
  names:
    categories:
    - knative-internal
    - caching
    kind: Image
    plural: images
    shortNames:
    - img
    singular: image
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.2
  creationTimestamp: null
  name: injectors.nuwa.nip.io
spec:
  group: nuwa.nip.io
  names:
    kind: Injector
    listKind: InjectorList
    plural: injectors
    shortNames:
    - nuwainj
    singular: injector
  scope: Namespaced
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pipelineresources.tekton.dev
spec:
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: PipelineResource
    plural: pipelineresources
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pipelineruns.tekton.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Succeeded")].status
    name: Succeeded
    type: string
  - JSONPath: .status.conditions[?(@.type=="Succeeded")].reason
    name: Reason
    type: string
  - JSONPath: .status.startTime
    name: StartTime
    type: date
  - JSONPath: .status.completionTime
    name: CompletionTime
    type: date
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: PipelineRun
    plural: pipelineruns
    shortNames:
    - pr
    - prs
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pipelines.tekton.dev
spec:
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: Pipeline
    plural: pipelines
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.2
  creationTimestamp: null
  name: statefulsets.nuwa.nip.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.replicas
    description: The desired number of pods.
    name: Replicas
    type: integer
  - JSONPath: .status.replicas
    description: The number of currently all pods.
    name: Current
    type: integer
  - JSONPath: .status.updatedReplicas
    description: The number of pods updated.
    name: Update
    type: integer
  - JSONPath: .status.readyReplicas
    description: The number of pods ready.
    name: Ready
    type: integer
  - JSONPath: .metadata.creationTimestamp
    description: CreationTimestamp is a timestamp representing the server time when
      this object was created. It is not guaranteed to be set in happens-before order
      across separate operations. Clients may not set this value. It is represented
      in RFC3339 form and is in UTC.
    name: Age
    type: date
  group: nuwa.nip.io
  names:
    kind: StatefulSet
    listKind: StatefulSetList
    plural: statefulsets
    shortNames:
    - nuwasts
    singular: statefulset
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.labelSelector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.2
  creationTimestamp: null
  name: stones.nuwa.nip.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.replicas
    description: The desired number of pods.
    name: Replicas
    type: integer
  - JSONPath: .status.statefulset
    description: The desired number of statefulset.
    name: Statefulset
    type: integer
  - JSONPath: .metadata.creationTimestamp
    description: CreationTimestamp is a timestamp representing the server time when
      this object was created. It is not guaranteed to be set in happens-before order
      across separate operations. Clients may not set this value. It is represented
      in RFC3339 form and is in UTC.
    name: Age
    type: date
  group: nuwa.nip.io
  names:
    kind: Stone
    listKind: StoneList
    plural: stones
    shortNames:
    - nuwaste
    singular: stone
  scope: Namespaced
  subresources:
    status: {}
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: taskruns.tekton.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Succeeded")].status
    name: Succeeded
    type: string
  - JSONPath: .status.conditions[?(@.type=="Succeeded")].reason
    name: Reason
    type: string
  - JSONPath: .status.startTime
    name: StartTime
    type: date
  - JSONPath: .status.completionTime
    name: CompletionTime
    type: date
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: TaskRun
    plural: taskruns
    shortNames:
    - tr
    - trs
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tasks.tekton.dev
spec:
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: Task
    plural: tasks
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.2
  creationTimestamp: null
  name: waters.nuwa.nip.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.desired_replicas
    description: The desired number of pods.
    name: DesiredReplicas
    type: integer
  - JSONPath: .status.already_replicas
    description: The desired number of pods.
    name: AlreadyReplicas
    type: integer
  - JSONPath: .status.desired_deployment
    description: The desired number of deployments.
    name: DesiredDeployment
    type: integer
  - JSONPath: .status.already_deployment
    description: The already replicas number of deployments.
    name: AlreadyDeployment
    type: integer
  - JSONPath: .metadata.creationTimestamp
    description: CreationTimestamp is a timestamp representing the server time when
      this object was created. It is not guaranteed to be set in happens-before order
      across separate operations. Clients may not set this value. It is represented
      in RFC3339 form and is in UTC.
    name: Age
    type: date
  group: nuwa.nip.io
  names:
    kind: Water
    listKind: WaterList
    plural: waters
    shortNames:
    - nuwawts
    singular: water
  scope: Namespaced
  subresources:
    scale:
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-state-metrics
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: metrics-server
  name: metrics-server
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: yamecloud-apps
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: yamecloud
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: tekton-pipelines
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - emptyDir
  - configMap
  - secret
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-leader-election-role
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: yamecloud
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - micro
  - micro/finalizers
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - fuxi
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - replicasets
  - deployments
  verbs:
  - get
- apiGroups:
  - yamecloud.io
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: compass-kube-state-metrics
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - nodes
  - pods
  - services
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  - persistentvolumes
  - namespaces
  - endpoints
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - replicasets
  - ingresses
  verbs:
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  - daemonsets
  - deployments
  - replicasets
  verbs:
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  - volumeattachments
  verbs:
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: compass-prometheus
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  - ingresses
  - configmaps
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kube-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - services/finalizers
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  - nodes
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nuwa.nip.io
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: metrics-server
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: metrics-server
  name: system:metrics-server
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - nodes/stats
  - namespaces
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: tekton-aggregate-edit
rules:
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: tekton-aggregate-view
rules:
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-pipelines-admin
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  - namespaces
  - secrets
  - events
  - serviceaccounts
  - configmaps
  - persistentvolumeclaims
  - limitranges
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - clustertasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - taskruns/finalizers
  - pipelineruns/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks/status
  - clustertasks/status
  - taskruns/status
  - pipelines/status
  - pipelineruns/status
  - pipelineresources/status
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - policy
  resourceNames:
  - tekton-pipelines
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-leader-election-rolebinding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    k8s-app: metrics-server
  name: metrics-server-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: metrics-server
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: yamecloud
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: yamecloud
subjects:
- kind: ServiceAccount
  name: yamecloud
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: compass-kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: compass-kube-state-metrics
subjects:
- kind: ServiceAccount
  name: kube-state-metrics
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: compass-prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: compass-prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: metrics-server
  name: metrics-server:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: metrics-server
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: metrics-server
  name: system:metrics-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:metrics-server
subjects:
- kind: ServiceAccount
  name: metrics-server
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: yamecloud-apps-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: yamecloud-apps
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: tekton-pipelines-controller-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-pipelines-admin
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
---
apiVersion: v1
data:
  put.sh: "#!/bin/bash\n while true\n   do\n     # if [ `ps -ef | grep etcd |grep
    -v grep | wc -l` -gt 0 ]\n     # then\n     ETCDCTL_API=3\n     /usr/local/bin/etcdctl
    put /go/micro/jwt \\'{\\\"key\\\":\\\"nishidabendan\\\"}\\' \n     /usr/local/bin/etcdctl
    put /go/micro/urls \\'{\\\"list\\\":[\\\"/login\\\"]}\\'\n     # fi\n   sleep
    100\n   done\n"
kind: ConfigMap
metadata:
  name: etcd-script-config
  namespace: kube-system
---
apiVersion: v1
data:
  prometheus.yaml: |-
    # Global config
    global:

      scrape_interval: 15s


    # Scrape configs for running Prometheus on a Kubernetes cluster.
    # This uses separate scrape configs for cluster components (i.e. API server, node)
    # and services to allow each to use different authentication configs.
    #
    # Kubernetes labels will be added as Prometheus labels on metrics via the
    # `labelmap` relabeling action.
    scrape_configs:

    # Scrape config for API servers.
    #
    # Kubernetes exposes API servers as endpoints to the default/kubernetes
    # service so this uses `endpoints` role and uses relabelling to only keep
    # the endpoints associated with the default/kubernetes service using the
    # default named port `https`. This works for single API server deployments as
    # well as HA API server deployments.
    - job_name: 'kubernetes-apiservers'

      kubernetes_sd_configs:
      - role: endpoints

      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        # Using endpoints to discover kube-apiserver targets finds the pod IP
        # (host IP since apiserver uses host network) which is not used in
        # the server certificate.
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      # Keep only the default/kubernetes service endpoints for the https port. This
      # will add targets for each API server which Kubernetes adds an endpoint to
      # the default/kubernetes service.
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name,
    __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https
      - replacement: apiserver
        action: replace
        target_label: job

    # Scrape config for node (i.e. kubelet) /metrics (e.g. 'kubelet_'). Explore
    # metrics from a node by scraping kubelet (127.0.0.1:10250/metrics).
    - job_name: 'kubelet'

      kubernetes_sd_configs:
      - role: node

      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        # Kubelet certs don't have any fixed IP SANs
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: 'kube-system'
        target_label: kubernetes_namespace

      metric_relabel_configs:
      - source_labels:
          - namespace
        action: replace
        regex: (.+)
        target_label: kubernetes_namespace

    # Scrape config for Kubelet cAdvisor. Explore metrics from a node by
    # scraping kubelet (127.0.0.1:10250/metrics/cadvisor).
    - job_name: 'kubernetes-cadvisor'

      kubernetes_sd_configs:
      - role: node

      scheme: https
      metrics_path: /metrics/cadvisor
      tls_config:
        # Kubelet certs don't have any fixed IP SANs
        insecure_skip_verify: true
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      metric_relabel_configs:
      - source_labels:
          - namespace
        action: replace
        target_label: kubernetes_namespace
      - source_labels:
        - pod
        regex: (.*)
        replacement: $1
        action: replace
        target_label: pod_name
      - source_labels:
        - container
        regex: (.*)
        replacement: $1
        action: replace
        target_label: container_name

    # Scrap etcd metrics from masters via etcd-scraper-proxy
    - job_name: 'etcd'

      kubernetes_sd_configs:
      - role: pod
      scheme: http
      relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          action: keep
          regex: 'kube-system'
        - source_labels: [__meta_kubernetes_pod_label_component]
          action: keep
          regex: 'etcd-scraper-proxy'
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)

    # Scrape config for service endpoints.
    #
    # The relabeling allows the actual service scrape endpoint to be configured
    # via the following annotations:
    #
    # * `prometheus.io/scrape`: Only scrape services that have a value of `true`
    # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
    # to set this to `https` & most likely set the `tls_config` of the scrape config.
    # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
    # * `prometheus.io/port`: If the metrics are exposed on a different port to the
    # service then set this appropriately.
    - job_name: 'kubernetes-service-endpoints'


      kubernetes_sd_configs:
      - role: endpoints

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: kubernetes_node
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      metric_relabel_configs:
      - source_labels:
          - namespace
        action: replace
        regex: (.+)
        target_label: kubernetes_namespace

    # Example scrape config for probing services via the Blackbox Exporter.
    #
    # The relabeling allows the actual service scrape endpoint to be configured
    # via the following annotations:
    #
    # * `prometheus.io/probe`: Only probe services that have a value of `true`
    - job_name: 'kubernetes-services'


      metrics_path: /probe
      params:
        module: [http_2xx]

      kubernetes_sd_configs:
      - role: service

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
        action: keep
        regex: true
      - source_labels: [__address__]
        target_label: __param_target
      - target_label: __address__
        replacement: blackbox
      - source_labels: [__param_target]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_service_name]
        target_label: job
      metric_relabel_configs:
      - source_labels:
          - namespace
        action: replace
        regex: (.+)
        target_label: kubernetes_namespace

    # Example scrape config for pods
    #
    # The relabeling allows the actual pod scrape endpoint to be configured via the
    # following annotations:
    #
    # * `prometheus.io/scrape`: Only scrape pods that have a value of `true`
    # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
    # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the
    # pod's declared ports (default is a port-free target if none are declared).
    - job_name: 'kubernetes-pods'


      kubernetes_sd_configs:
      - role: pod

      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
      metric_relabel_configs:
      - source_labels:
          - namespace
        action: replace
        regex: (.+)
        target_label: kubernetes_namespace

    # Rule files
    rule_files:

      - "/etc/prometheus/rules/*.rules"
      - "/etc/prometheus/rules/*.yaml"
      - "/etc/prometheus/rules/*.yml"
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: kube-system
---
apiVersion: v1
data:
  alertmanager.rules.yaml: |
    groups:
    - name: alertmanager.rules
      rules:
      - alert: AlertmanagerConfigInconsistent
        expr: count_values("config_hash", alertmanager_config_hash) BY (service) / ON(service)
          GROUP_LEFT() label_replace(prometheus_operator_alertmanager_spec_replicas, "service",
          "alertmanager-$1", "alertmanager", "(.*)") != 1
        for: 5m
        labels:
          severity: critical
        annotations:
          description: The configuration of the instances of the Alertmanager cluster
            `{{$labels.service}}` are out of sync.
      - alert: AlertmanagerDownOrMissing
        expr: label_replace(prometheus_operator_alertmanager_spec_replicas, "job", "alertmanager-$1",
          "alertmanager", "(.*)") / ON(job) GROUP_RIGHT() sum(up) BY (job) != 1
        for: 5m
        labels:
          severity: warning
        annotations:
          description: An unexpected number of Alertmanagers are scraped or Alertmanagers
            disappeared from discovery.
      - alert: AlertmanagerFailedReload
        expr: alertmanager_config_last_reload_successful == 0
        for: 10m
        labels:
          severity: warning
        annotations:
          description: Reloading Alertmanager's configuration has failed for {{ $labels.namespace
            }}/{{ $labels.pod}}.
  etcd3.rules.yaml: |
    groups:
    - name: ./etcd3.rules
      rules:
      - alert: InsufficientMembers
        expr: count(up{job="etcd"} == 0) > (count(up{job="etcd"}) / 2 - 1)
        for: 3m
        labels:
          severity: critical
        annotations:
          description: If one more etcd member goes down the cluster will be unavailable
          summary: etcd cluster insufficient members
      - alert: NoLeader
        expr: etcd_server_has_leader{job="etcd"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          description: etcd member {{ $labels.instance }} has no leader
          summary: etcd member has no leader
      - alert: HighNumberOfLeaderChanges
        expr: increase(etcd_server_leader_changes_seen_total{job="etcd"}[1h]) > 3
        labels:
          severity: warning
        annotations:
          description: etcd instance {{ $labels.instance }} has seen {{ $value }} leader
            changes within the last hour
          summary: a high number of leader changes within the etcd cluster are happening
      - alert: GRPCRequestsSlow
        expr: histogram_quantile(0.99, sum(rate(grpc_server_handling_seconds_bucket{job="etcd",grpc_type="unary"}[5m])) by (grpc_service, grpc_method, le))
          > 0.15
        for: 10m
        labels:
          severity: critical
        annotations:
          description: on etcd instance {{ $labels.instance }} gRPC requests to {{ $labels.grpc_method
            }} are slow
          summary: slow gRPC requests
      - alert: HighNumberOfFailedHTTPRequests
        expr: sum(rate(etcd_http_failed_total{job="etcd"}[5m])) BY (method) / sum(rate(etcd_http_received_total{job="etcd"}[5m]))
          BY (method) > 0.01
        for: 10m
        labels:
          severity: warning
        annotations:
          description: '{{ $value }}% of requests for {{ $labels.method }} failed on etcd
            instance {{ $labels.instance }}'
          summary: a high number of HTTP requests are failing
      - alert: HighNumberOfFailedHTTPRequests
        expr: sum(rate(etcd_http_failed_total{job="etcd"}[5m])) BY (method) / sum(rate(etcd_http_received_total{job="etcd"}[5m]))
          BY (method) > 0.05
        for: 5m
        labels:
          severity: critical
        annotations:
          description: '{{ $value }}% of requests for {{ $labels.method }} failed on etcd
            instance {{ $labels.instance }}'
          summary: a high number of HTTP requests are failing
      - alert: HTTPRequestsSlow
        expr: histogram_quantile(0.99, rate(etcd_http_successful_duration_seconds_bucket[5m]))
          > 0.15
        for: 10m
        labels:
          severity: warning
        annotations:
          description: on etcd instance {{ $labels.instance }} HTTP requests to {{ $labels.method
            }} are slow
          summary: slow HTTP requests
      - alert: EtcdMemberCommunicationSlow
        expr: histogram_quantile(0.99, rate(etcd_network_peer_round_trip_time_seconds_bucket[5m]))
          > 0.15
        for: 10m
        labels:
          severity: warning
        annotations:
          description: etcd instance {{ $labels.instance }} member communication with
            {{ $labels.To }} is slow
          summary: etcd member communication is slow
      - alert: HighNumberOfFailedProposals
        expr: increase(etcd_server_proposals_failed_total{job="etcd"}[1h]) > 5
        labels:
          severity: warning
        annotations:
          description: etcd instance {{ $labels.instance }} has seen {{ $value }} proposal
            failures within the last hour
          summary: a high number of proposals within the etcd cluster are failing
      - alert: HighFsyncDurations
        expr: histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket[5m]))
          > 0.5
        for: 10m
        labels:
          severity: warning
        annotations:
          description: etcd instance {{ $labels.instance }} fync durations are high
          summary: high fsync durations
      - alert: HighCommitDurations
        expr: histogram_quantile(0.99, rate(etcd_disk_backend_commit_duration_seconds_bucket[5m]))
          > 0.25
        for: 10m
        labels:
          severity: warning
        annotations:
          description: etcd instance {{ $labels.instance }} commit durations are high
          summary: high commit durations
  general.rules.yaml: |
    groups:
    - name: general.rules
      rules:
      - alert: TargetDown
        expr: 100 * (count(up == 0) BY (job) / count(up) BY (job)) > 10
        for: 10m
        labels:
          severity: warning
        annotations:
          description: '{{ $value }}% of {{ $labels.job }} targets are down.'
          summary: Targets are down
      - record: fd_utilization
        expr: process_open_fds / process_max_fds
      - alert: FdExhaustionClose
        expr: predict_linear(fd_utilization[1h], 3600 * 4) > 1
        for: 10m
        labels:
          severity: warning
        annotations:
          description: '{{ $labels.job }}: {{ $labels.namespace }}/{{ $labels.pod }} instance
            will exhaust in file/socket descriptors within the next 4 hours'
          summary: file descriptors soon exhausted
      - alert: FdExhaustionClose
        expr: predict_linear(fd_utilization[10m], 3600) > 1
        for: 10m
        labels:
          severity: critical
        annotations:
          description: '{{ $labels.job }}: {{ $labels.namespace }}/{{ $labels.pod }} instance
            will exhaust in file/socket descriptors within the next hour'
          summary: file descriptors soon exhausted
  kube-state-metrics.rules.yaml: |
    groups:
    - name: kube-state-metrics.rules
      rules:
      - alert: DeploymentGenerationMismatch
        expr: kube_deployment_status_observed_generation != kube_deployment_metadata_generation
        for: 15m
        labels:
          severity: warning
        annotations:
          description: Observed deployment generation does not match expected one for
            deployment {{$labels.namespaces}}/{{$labels.deployment}}
          summary: Deployment is outdated
      - alert: DeploymentReplicasNotUpdated
        expr: ((kube_deployment_status_replicas_updated != kube_deployment_spec_replicas)
          or (kube_deployment_status_replicas_available != kube_deployment_spec_replicas))
          unless (kube_deployment_spec_paused == 1)
        for: 15m
        labels:
          severity: warning
        annotations:
          description: Replicas are not updated and available for deployment {{$labels.namespaces}}/{{$labels.deployment}}
          summary: Deployment replicas are outdated
      - alert: DaemonSetRolloutStuck
        expr: kube_daemonset_status_number_ready / kube_daemonset_status_desired_number_scheduled
          * 100 < 100
        for: 15m
        labels:
          severity: warning
        annotations:
          description: Only {{$value}}% of desired pods scheduled and ready for daemon
            set {{$labels.namespaces}}/{{$labels.daemonset}}
          summary: DaemonSet is missing pods
      - alert: K8SDaemonSetsNotScheduled
        expr: kube_daemonset_status_desired_number_scheduled - kube_daemonset_status_current_number_scheduled
          > 0
        for: 10m
        labels:
          severity: warning
        annotations:
          description: A number of daemonsets are not scheduled.
          summary: Daemonsets are not scheduled correctly
      - alert: DaemonSetsMissScheduled
        expr: kube_daemonset_status_number_misscheduled > 0
        for: 10m
        labels:
          severity: warning
        annotations:
          description: A number of daemonsets are running where they are not supposed
            to run.
          summary: Daemonsets are not scheduled correctly
      - alert: PodFrequentlyRestarting
        expr: increase(kube_pod_container_status_restarts_total[1h]) > 5
        for: 10m
        labels:
          severity: warning
        annotations:
          description: Pod {{$labels.namespaces}}/{{$labels.pod}} restarted {{$value}}
            times within the last hour
          summary: Pod is restarting frequently
  kubelet.rules.yaml: |
    groups:
    - name: kubelet.rules
      rules:
      - alert: K8SNodeNotReady
        expr: kube_node_status_condition{condition="Ready",status="true"} == 0
        for: 1h
        labels:
          severity: warning
        annotations:
          description: The Kubelet on {{ $labels.node }} has not checked in with the API,
            or has set itself to NotReady, for more than an hour
          summary: Node status is NotReady
      - alert: K8SManyNodesNotReady
        expr: count(kube_node_status_condition{condition="Ready",status="true"} == 0)
          > 1 and (count(kube_node_status_condition{condition="Ready",status="true"} ==
          0) / count(kube_node_status_condition{condition="Ready",status="true"})) > 0.2
        for: 1m
        labels:
          severity: critical
        annotations:
          description: '{{ $value }}% of Kubernetes nodes are not ready'
      - alert: K8SKubeletDown
        expr: count(up{job="kubelet"} == 0) / count(up{job="kubelet"}) * 100 > 3
        for: 1h
        labels:
          severity: warning
        annotations:
          description: Prometheus failed to scrape {{ $value }}% of kubelets.
      - alert: K8SKubeletDown
        expr: (absent(up{job="kubelet"} == 1) or count(up{job="kubelet"} == 0) / count(up{job="kubelet"}))
          * 100 > 10
        for: 1h
        labels:
          severity: critical
        annotations:
          description: Prometheus failed to scrape {{ $value }}% of kubelets, or all Kubelets
            have disappeared from service discovery.
          summary: Many Kubelets cannot be scraped
      - alert: K8SKubeletTooManyPods
        expr: kubelet_running_pod_count > 100
        for: 10m
        labels:
          severity: warning
        annotations:
          description: Kubelet {{$labels.instance}} is running {{$value}} pods, close
            to the limit of 110
          summary: Kubelet is close to pod limit
  kubernetes.rules.yaml: |
    groups:
    - name: kubernetes.rules
      rules:
      - record: pod_name:container_memory_usage_bytes:sum
        expr: sum(container_memory_usage_bytes{container_name!="POD",pod_name!=""}) BY
          (pod_name)
      - record: pod_name:container_spec_cpu_shares:sum
        expr: sum(container_spec_cpu_shares{container_name!="POD",pod_name!=""}) BY (pod_name)
      - record: pod_name:container_cpu_usage:sum
        expr: sum(rate(container_cpu_usage_seconds_total{container_name!="POD",pod_name!=""}[5m]))
          BY (pod_name)
      - record: pod_name:container_fs_usage_bytes:sum
        expr: sum(container_fs_usage_bytes{container_name!="POD",pod_name!=""}) BY (pod_name)
      - record: namespace:container_memory_usage_bytes:sum
        expr: sum(container_memory_usage_bytes{container_name!=""}) BY (namespace)
      - record: namespace:container_spec_cpu_shares:sum
        expr: sum(container_spec_cpu_shares{container_name!=""}) BY (namespace)
      - record: namespace:container_cpu_usage:sum
        expr: sum(rate(container_cpu_usage_seconds_total{container_name!="POD"}[5m]))
          BY (namespace)
      - record: cluster:memory_usage:ratio
        expr: sum(container_memory_usage_bytes{container_name!="POD",pod_name!=""}) BY
          (cluster) / sum(machine_memory_bytes) BY (cluster)
      - record: cluster:container_spec_cpu_shares:ratio
        expr: sum(container_spec_cpu_shares{container_name!="POD",pod_name!=""}) / 1000
          / sum(machine_cpu_cores)
      - record: cluster:container_cpu_usage:ratio
        expr: sum(rate(container_cpu_usage_seconds_total{container_name!="POD",pod_name!=""}[5m]))
          / sum(machine_cpu_cores)
      - record: apiserver_latency_seconds:quantile
        expr: histogram_quantile(0.99, rate(apiserver_request_latencies_bucket[5m])) /
          1e+06
        labels:
          quantile: "0.99"
      - record: apiserver_latency:quantile_seconds
        expr: histogram_quantile(0.9, rate(apiserver_request_latencies_bucket[5m])) /
          1e+06
        labels:
          quantile: "0.9"
      - record: apiserver_latency_seconds:quantile
        expr: histogram_quantile(0.5, rate(apiserver_request_latencies_bucket[5m])) /
          1e+06
        labels:
          quantile: "0.5"
      - alert: APIServerLatencyHigh
        expr: apiserver_latency_seconds:quantile{quantile="0.99",subresource!="log",verb!~"^(?:WATCH|WATCHLIST|PROXY|CONNECT)$"}
          > 1
        for: 10m
        labels:
          severity: warning
        annotations:
          description: the API server has a 99th percentile latency of {{ $value }} seconds
            for {{$labels.verb}} {{$labels.resource}}
      - alert: APIServerLatencyHigh
        expr: apiserver_latency_seconds:quantile{quantile="0.99",subresource!="log",verb!~"^(?:WATCH|WATCHLIST|PROXY|CONNECT)$"}
          > 4
        for: 10m
        labels:
          severity: critical
        annotations:
          description: the API server has a 99th percentile latency of {{ $value }} seconds
            for {{$labels.verb}} {{$labels.resource}}
      - alert: APIServerErrorsHigh
        expr: rate(apiserver_request_count{code=~"^(?:5..)$"}[5m]) / rate(apiserver_request_count[5m])
          * 100 > 2
        for: 10m
        labels:
          severity: warning
        annotations:
          description: API server returns errors for {{ $value }}% of requests
      - alert: APIServerErrorsHigh
        expr: rate(apiserver_request_count{code=~"^(?:5..)$"}[5m]) / rate(apiserver_request_count[5m])
          * 100 > 5
        for: 10m
        labels:
          severity: critical
        annotations:
          description: API server returns errors for {{ $value }}% of requests
      - alert: K8SApiserverDown
        expr: absent(up{job="apiserver"} == 1)
        for: 20m
        labels:
          severity: critical
        annotations:
          description: No API servers are reachable or all have disappeared from service
            discovery

      - alert: K8sCertificateExpirationNotice
        labels:
          severity: warning
        annotations:
          description: Kubernetes API Certificate is expiring soon (less than 7 days)
        expr: sum(apiserver_client_certificate_expiration_seconds_bucket{le="604800"}) > 0

      - alert: K8sCertificateExpirationNotice
        labels:
          severity: critical
        annotations:
          description: Kubernetes API Certificate is expiring in less than 1 day
        expr: sum(apiserver_client_certificate_expiration_seconds_bucket{le="86400"}) > 0
  node.rules.yaml: |
    groups:
    - name: node.rules
      rules:
      - record: instance:node_cpu:rate:sum
        expr: sum(rate(node_cpu{mode!="idle",mode!="iowait",mode!~"^(?:guest.*)$"}[3m]))
          BY (instance)
      - record: instance:node_filesystem_usage:sum
        expr: sum((node_filesystem_size{mountpoint="/"} - node_filesystem_free{mountpoint="/"}))
          BY (instance)
      - record: instance:node_network_receive_bytes:rate:sum
        expr: sum(rate(node_network_receive_bytes[3m])) BY (instance)
      - record: instance:node_network_transmit_bytes:rate:sum
        expr: sum(rate(node_network_transmit_bytes[3m])) BY (instance)
      - record: instance:node_cpu:ratio
        expr: sum(rate(node_cpu{mode!="idle"}[5m])) WITHOUT (cpu, mode) / ON(instance)
          GROUP_LEFT() count(sum(node_cpu) BY (instance, cpu)) BY (instance)
      - record: cluster:node_cpu:sum_rate5m
        expr: sum(rate(node_cpu{mode!="idle"}[5m]))
      - record: cluster:node_cpu:ratio
        expr: cluster:node_cpu:rate5m / count(sum(node_cpu) BY (instance, cpu))
      - alert: NodeExporterDown
        expr: absent(up{job="node-exporter"} == 1)
        for: 10m
        labels:
          severity: warning
        annotations:
          description: Prometheus could not scrape a node-exporter for more than 10m,
            or node-exporters have disappeared from discovery
      - alert: NodeDiskRunningFull
        expr: predict_linear(node_filesystem_free[6h], 3600 * 24) < 0
        for: 30m
        labels:
          severity: warning
        annotations:
          description: device {{$labels.device}} on node {{$labels.instance}} is running
            full within the next 24 hours (mounted at {{$labels.mountpoint}})
      - alert: NodeDiskRunningFull
        expr: predict_linear(node_filesystem_free[30m], 3600 * 2) < 0
        for: 10m
        labels:
          severity: critical
        annotations:
          description: device {{$labels.device}} on node {{$labels.instance}} is running
            full within the next 2 hours (mounted at {{$labels.mountpoint}})
      - alert: InactiveRAIDDisk
        expr: node_md_disks - node_md_disks_active > 0
        for: 10m
        labels:
          severity: warning
        annotations:
          description: '{{$value}} RAID disk(s) on node {{$labels.instance}} are inactive'
  prometheus.rules.yaml: |
    groups:
    - name: prometheus.rules
      rules:
      - alert: PrometheusConfigReloadFailed
        expr: prometheus_config_last_reload_successful == 0
        for: 10m
        labels:
          severity: warning
        annotations:
          description: Reloading Prometheus' configuration has failed for {{$labels.namespace}}/{{$labels.pod}}
      - alert: PrometheusNotificationQueueRunningFull
        expr: predict_linear(prometheus_notifications_queue_length[5m], 60 * 30) > prometheus_notifications_queue_capacity
        for: 10m
        labels:
          severity: warning
        annotations:
          description: Prometheus' alert notification queue is running full for {{$labels.namespace}}/{{
            $labels.pod}}
      - alert: PrometheusErrorSendingAlerts
        expr: rate(prometheus_notifications_errors_total[5m]) / rate(prometheus_notifications_sent_total[5m])
          > 0.01
        for: 10m
        labels:
          severity: warning
        annotations:
          description: Errors while sending alerts from Prometheus {{$labels.namespace}}/{{
            $labels.pod}} to Alertmanager {{$labels.Alertmanager}}
      - alert: PrometheusErrorSendingAlerts
        expr: rate(prometheus_notifications_errors_total[5m]) / rate(prometheus_notifications_sent_total[5m])
          > 0.03
        for: 10m
        labels:
          severity: critical
        annotations:
          description: Errors while sending alerts from Prometheus {{$labels.namespace}}/{{
            $labels.pod}} to Alertmanager {{$labels.Alertmanager}}
      - alert: PrometheusNotConnectedToAlertmanagers
        expr: prometheus_notifications_alertmanagers_discovered < 1
        for: 10m
        labels:
          severity: warning
        annotations:
          description: Prometheus {{ $labels.namespace }}/{{ $labels.pod}} is not connected
            to any Alertmanagers
      - alert: PrometheusTSDBReloadsFailing
        expr: increase(prometheus_tsdb_reloads_failures_total[2h]) > 0
        for: 12h
        labels:
          severity: warning
        annotations:
          description: '{{$labels.job}} at {{$labels.instance}} had {{$value | humanize}}
            reload failures over the last four hours.'
          summary: Prometheus has issues reloading data blocks from disk
      - alert: PrometheusTSDBCompactionsFailing
        expr: increase(prometheus_tsdb_compactions_failed_total[2h]) > 0
        for: 12h
        labels:
          severity: warning
        annotations:
          description: '{{$labels.job}} at {{$labels.instance}} had {{$value | humanize}}
            compaction failures over the last four hours.'
          summary: Prometheus has issues compacting sample blocks
      - alert: PrometheusTSDBWALCorruptions
        expr: tsdb_wal_corruptions_total > 0
        for: 4h
        labels:
          severity: warning
        annotations:
          description: '{{$labels.job}} at {{$labels.instance}} has a corrupted write-ahead
            log (WAL).'
          summary: Prometheus write-ahead log is corrupted
      - alert: PrometheusNotIngestingSamples
        expr: rate(prometheus_tsdb_head_samples_appended_total[5m]) <= 0
        for: 10m
        labels:
          severity: warning
        annotations:
          description: "Prometheus {{ $labels.namespace }}/{{ $labels.pod}} isn't ingesting samples."
          summary: "Prometheus isn't ingesting samples"
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-artifact-bucket
  namespace: tekton-pipelines
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-artifact-pvc
  namespace: tekton-pipelines
---
apiVersion: v1
data:
  _example: |-
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # default-timeout-minutes contains the default number of
    # minutes to use for TaskRun and PipelineRun, if none is specified.
    default-timeout-minutes: "60"  # 60 minutes

    # default-service-account contains the default service account name
    # to use for TaskRun and PipelineRun, if none is specified.
    default-service-account: "default"

    # default-managed-by-label-value contains the default value given to the
    # "app.kubernetes.io/managed-by" label applied to all Pods created for
    # TaskRuns. If a user's requested TaskRun specifies another value for this
    # label, the user's request supercedes.
    default-managed-by-label-value: "tekton-pipelines"

    # default-pod-template contains the default pod template to use
    # TaskRun and PipelineRun, if none is specified. If a pod template
    # is specified, the default pod template is ignored.
    # default-pod-template:
kind: ConfigMap
metadata:
  name: config-defaults
  namespace: tekton-pipelines
---
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  name: config-logging
  namespace: tekton-pipelines
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using Stackdriver will incur additional charges.
    metrics.backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the Stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used and metrics will be sent to the cluster's project if this field is
    # not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed
    # to send metrics to Stackdriver using "global" resource type and custom
    # metric type. Setting this flag to "true" could cause extra Stackdriver
    # charge.  If metrics.backend-destination is not Stackdriver, this is
    # ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
kind: ConfigMap
metadata:
  name: config-observability
  namespace: tekton-pipelines
---
apiVersion: v1
data:
  disable-home-env-overwrite: "false"
  disable-working-directory-overwrite: "false"
kind: ConfigMap
metadata:
  name: feature-flags
  namespace: tekton-pipelines
---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV0akNDQTU2Z0F3SUJBZ0lVRXYvWHpReTgya2drWlJLL0xmYkhycUFpaFFzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2NqRUxNQWtHQTFVRUJoTUNRMDR4RWpBUUJnTlZCQWdUQ1VkMVlXNW5XbWh2ZFRFU01CQUdBMVVFQnhNSgpSM1ZoYm1kYWFHOTFNUXd3Q2dZRFZRUUtFd05yT0hNeER6QU5CZ05WQkFzVEJsTjVjM1JsYlRFY01Cb0dBMVVFCkF4TVRhM1ZpWlhKdVpYUmxjeTFUYjNWc2JXRjBaVEFlRncweU1EQTFNRE14TURJek1EQmFGdzAwTURBME1qZ3gKTURJek1EQmFNR014Q3pBSkJnTlZCQVlUQWtOT01SSXdFQVlEVlFRSUV3bEhkV0Z1WjFwb2IzVXhFakFRQmdOVgpCQWNUQ1VkMVlXNW5XbWh2ZFRFTU1Bb0dBMVVFQ2hNRGF6aHpNUTh3RFFZRFZRUUxFd1pUZVhOMFpXMHhEVEFMCkJnTlZCQU1UQkc1MWQyRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEUzZvSUEKWnZjNnJlb0lCdHpSUmdXcGF2OFFnQk93d0FLdnlzYmlDTkVpenNZNmkwVWxrV0gyYVFvZHozb3Nrc2ZDTlpxdApRRWtGeHV1SHMvcmRJaW44UzlreFc5UVZEMmZQbldGcFYwcHdTYXpJR0ZwbitwWHBnNGJDYi9acGJvTWdsM1cvClhXNEQvYVRBOE92N3NHOHkwblVldDh5VXRGWHk2eWJ5TnFkY2o4Y2g5TlF5dnhGT2E5anByME9CdURTVEE1a08Kd2lHTm94ZitpVTRUeXZNNGlXUjBwVTV0Y0M1VGYraU9mT0dHNXpaRjg0cEJFYWFFOXRYRVNnVFZhU2swby9BUApSbzJGRFE4dHl6QmJOMWJUUmQvcTNLYVh6UnlmYkdqazNlTTBlRHNFOEo2eXJwUHlNeTdvUHZ3b2VuUStDV3c5ClFabFMzb2hFQVJPcy9rK1ZBZ01CQUFHamdnRlJNSUlCVFRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRQpGRmgzZithV0NRM2pWaG9TOFBDb1pFblR3eTVmTUI4R0ExVWRJd1FZTUJhQUZGSHJpN3JvNVdsRTBOelJsS0NhCnNPcG9YOU4yTUlITkJnTlZIUkVFZ2NVd2djS0NGR3QxWW1VdGQyVmlhRzl2YXkxelpYSjJhV05sZ2lCcmRXSmwKTFhkbFltaHZiMnN0YzJWeWRtbGpaUzVyZFdKbExYTjVjM1JsYllJa2EzVmlaUzEzWldKb2IyOXJMWE5sY25acApZMlV1YTNWaVpTMXplWE4wWlcwdWMzWmpnamRyZFdKbExXTnZiblJ5YjJ4c1pYSXRiV0Z1WVdkbGNpMXRaWFJ5CmFXTnpMWE5sY25acFkyVXVhM1ZpWlMxemVYTjBaVzB1YzNaamhpbHJkV0psTFhkbFltaHZiMnN0YzJWeWRtbGoKWlM1cmRXSmxMWE41YzNSbGJTNXpkbU02TVRRME16QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSa2ZZMExseQpDMzdKQmM4TGZ4amI4RDN6bVZ6UEZXRFF0UXMwOFFEc1Jtd2s4eSt4M2h4OTU4QW5hWmV1WGV6aEVZT3B6ZDZxCm1BODBwamVYR0hNS0x4SXlQOUtJNm1qUlVkZHNwVkNtUVpoS3pOUkpidVRQbnowT3ppanp4SWRjZi9ZK2xGbW8KSDhVcUNvOHNzblA0RmVqTi9hcCsvNTZ2R2JWTFRUZUxVQlF1UE1KRHg0MXpiZ045QlY0bmtyd0JWdkFOeHZzNgowYzRiMFYyR2I5UVVRYXBZTkYvS054c0RTSTl0dEtwcnNGY2VmNmx0akxHTGQreGpIUCsxRGtxcCtna1hYZS9sCkNGVFQvVnpsV1htVTN3QTdNMjlJZTBsT2thY25vQXVDSWwwN2l6d04wbEN6ZDlBM2RzWktmTFJ5ZUZaQnF4QmkKM1lDVnhrM3FjSmZGYkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBMHVxQ0FHYjNPcTNxQ0FiYzBVWUZxV3IvRUlBVHNNQUNyOHJHNGdqUklzN0dPb3RGCkpaRmg5bWtLSGM5NkxKTEh3aldhclVCSkJjYnJoN1A2M1NJcC9FdlpNVnZVRlE5bno1MWhhVmRLY0Vtc3lCaGEKWi9xVjZZT0d3bS8yYVc2RElKZDF2MTF1QS8ya3dQRHIrN0J2TXRKMUhyZk1sTFJWOHVzbThqYW5YSS9ISWZUVQpNcjhSVG12WTZhOURnYmcwa3dPWkRzSWhqYU1YL29sT0U4cnpPSWxrZEtWT2JYQXVVMy9vam56aGh1YzJSZk9LClFSR21oUGJWeEVvRTFXa3BOS1B3RDBhTmhRMFBMY3N3V3pkVzAwWGY2dHltbDgwY24yeG81TjNqTkhnN0JQQ2UKc3E2VDhqTXU2RDc4S0hwMFBnbHNQVUdaVXQ2SVJBRVRyUDVQbFFJREFRQUJBb0lCQVFDV3BPcVBrUHQ2VE9lQQpMaTZmeG95YXNoSlYzYlN5cEtJR255V29JallGejN4a0tqOE1FeWZPRUw0cUJwdXpwRzdLOXZCd1dCOFA0a0V0CjNzNEtEYkhCUXdkeEtxNXpFRnJNUGhOcVl1K0cvZ2hMcnFFNzdRNFFDR0pERkNjQ3JPMDVaUlN6eHU2aUtSTDQKdjlzOUhJcC8yVFBQNmVWVVBPMjZvRnhqMmNkMTR1c0tRdDU4R3dTRXpKREU3dW9qRC9RZzIvUVY2RjFJaTB6Rwp4TzBEYkttOUFZVmk1Z2dtanBPOHJnN1hyLzlxTTJVM3g4Sys0Vkgzbk9vVXA3aG93TjVUb1VPL3lCdmYwQlFJCndaUFFpSnN6VWp2MGVnakZPYTdWZW9TSFpHSWVHVWxlL0doVTJZdWxoVkZYWWpJa2xOZC9oSjNtcjVDOS9hRG8KVGI1QU1sanRBb0dCQU5zQU1MUGppcm1tZzhOejV2Vmh1OVh5czF3d1hWcm1nTytVRi9HWW9oU0J1Y2F4VDhJSgpJcUpNc2V4SEJWT2VDZm04QjFDazQzMHdhNWo5U3AyRCtVSTR3ZmNBZmZERmorUFljbUtBczFETW4xenVMclc0Ci9PRkZnQkdmb2l6T2dkMjNwd3VjeStmdUFwbCt4K01DeC9CR0x0bTNvdEFzMTZKbWtWTUpqcmtUQW9HQkFQYU0KcDBYaHZTOW1PbjViNEpxTW9oWDF6M1Z2aWhMaGVWRHNyeHViQWZJclZUTmpWWHpzRXJzNzN5MWdSb0hxT2g3SgpTQml4cFZxNkYvT3MxRlduOEhaaEZ1T2hPL1RDOTY2VEh5c1d6RzljSnFPQWhCdGVhaGVEQldUK0pFcVMydjZ1ClA4VzEvMTduRXFXYmY1eFN3RlhYSXkxTXB2bmJzZjNoUUJlaEUxRzNBb0dCQU1GZDk2SytSSjBMbzhnT0xGMTUKZ0NxMmN4dnhNRnkwcmgvYitSQS9IczFRaGNJa2lUSGdjdzR1L2VLTUN1MzcydjhBd015NTZvdDlGMlFzTVpmSApFVzBoUkZKZHd0VzIrd2ZJODZaNTBOcUU4aWxSdlRpREwvV1FNalpkWndwOUJEbktrTm8yQmV5eFFPWmJCUTh5ClEydXA3SEFjTHN2MDdDamV1MjVBUUI2MUFvR0JBS3QxeThxc244Mzc4VWY1QzIxUHlsVXRXcmFYK0ZVREcwUnQKSmFZMEdabGFDMm11ZGtCblNPdVBTcmthMEUzL0g2WlRZdUZSZ2VaanJzNlc3aUFYcUFJYnFUaHE0L0JuT3FyYwp3L3RLWXFnN1ZOKzJPNmx3OHFVaFNEb2hDQW9Zc1ZZV3htRHdIZ1hZK3ozU3MxOTZxU25KY1R4S3A0RHlDWW0vCkFieXRGMnRuQW9HQkFLY1A0blppNFQzcTBLNkw0cUx4NFJubzEvTmc0NkZJNmUyam9vNjhFek4yUkNxWUVMeCsKQjlEMGZlOXRqMGVzVVlnUHZCQ0RYZ1pXeFM2RE1jYmFXMHoxa1kzcVU2c1BVWkd6aWFMdlhYYWNiSUVGV0tnQgp2TEo4OVNLaWVIRW10d29NSHp6WndZNit0R2ZoYWV5QUZscE9tMy9DOERxc2o4dTlDVmIrVERGbQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  labels:
    control-plane: nuwa-controller
  name: kube-nuwa-secret
  namespace: kube-system
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    pipeline.tekton.dev/release: devel
  name: webhook-certs
  namespace: tekton-pipelines
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: compass
  name: compass
  namespace: kube-system
spec:
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  selector:
    app: compass
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: etcd
  name: etcd
  namespace: kube-system
spec:
  ports:
  - name: "2379"
    port: 2379
    targetPort: 2379
  selector:
    app: etcd
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gateway
  name: gateway
  namespace: kube-system
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    app: gateway
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: kube-controller-manager-metrics-service
  namespace: kube-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
  labels:
    name: kube-state-metrics
  name: kube-state-metrics
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    name: kube-state-metrics
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: nuwa-controller
  name: kube-webhook-service
  namespace: kube-system
spec:
  ports:
  - port: 1443
    targetPort: 1443
  selector:
    control-plane: nuwa-controller
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: metrics-server
  name: metrics-server
  namespace: kube-system
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    k8s-app: metrics-server
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
  name: node-exporter
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 80
    protocol: TCP
    targetPort: 9100
  selector:
    name: node-exporter
    phase: prod
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
  name: prometheus
  namespace: kube-system
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 9090
  selector:
    name: prometheus
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
  labels:
    app: tekton-pipelines-controller
    pipeline.tekton.dev/release: v0.11.1
    version: v0.11.1
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
spec:
  ports:
  - name: http-metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: tekton-pipelines-controller
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-pipelines-webhook
    pipeline.tekton.dev/release: v0.11.1
    role: webhook
    version: v0.11.1
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
spec:
  ports:
  - name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: https-webhook
    port: 443
    targetPort: 8443
  selector:
    app: tekton-pipelines-webhook
    role: webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: accesscontrol
  name: accesscontrol
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: accesscontrol
  strategy: {}
  template:
    metadata:
      labels:
        app: accesscontrol
    spec:
      containers:
      - args:
        - --registry
        - etcd
        - --registry_address
        - etcd.kube-system.svc.cluster.local:2379
        env:
        - name: IN_CLUSTER
          value: "true"
        image: yametech/accesscontrol:0.2.1
        imagePullPolicy: Always
        name: accesscontrol
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: yamecloud-apps
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: base
  name: base
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: base
  strategy: {}
  template:
    metadata:
      labels:
        app: base
    spec:
      containers:
      - args:
        - --registry
        - etcd
        - --registry_address
        - etcd.kube-system.svc.cluster.local:2379
        env:
        - name: IN_CLUSTER
          value: "true"
        image: yametech/base:0.2.1
        imagePullPolicy: Always
        name: base
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: yamecloud-apps
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: compass
  name: compass
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: compass
  strategy: {}
  template:
    metadata:
      labels:
        app: compass
    spec:
      containers:
      - image: yametech/compass:0.2.1
        imagePullPolicy: Always
        name: compass
        ports:
        - containerPort: 80
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      restartPolicy: Always
      schedulerName: default-scheduler
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: editer
  name: editer
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: editer
  strategy: {}
  template:
    metadata:
      labels:
        app: editer
    spec:
      containers:
      - args:
        - --registry
        - etcd
        - --registry_address
        - etcd.kube-system.svc.cluster.local:2379
        env:
        - name: IN_CLUSTER
          value: "true"
        image: yametech/editer:0.2.1
        imagePullPolicy: Always
        name: editer
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: yamecloud-apps
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcd
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      labels:
        app: etcd
    spec:
      containers:
      - args:
        - etcd
        - -name
        - etcd1
        - -advertise-client-urls=http://0.0.0.0:2379
        - -listen-client-urls=http://0.0.0.0:2379
        - -initial-cluster-state
        - new
        env:
        - name: ETCDCTL_API
          value: "3"
        image: yametech/etcd:20200627
        imagePullPolicy: IfNotPresent
        name: etcd-server
      - args:
        - sh
        - /script/put.sh
        env:
        - name: ETCDCTL_API
          value: "3"
        image: yametech/etcd:20200627
        imagePullPolicy: IfNotPresent
        name: etcd-client
        volumeMounts:
        - mountPath: /script/put.sh
          name: script-config
          subPath: put.sh
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      schedulerName: default-scheduler
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: etcd-script-config
        name: script-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gateway
  name: gateway
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
      - args:
        - --registry
        - etcd
        - --registry_address
        - etcd.kube-system.svc.cluster.local:2379
        - api
        - --handler=http
        env:
        - name: IN_CLUSTER
          value: "true"
        image: yametech/gateway:0.2.1
        imagePullPolicy: Always
        name: gateway
        ports:
        - containerPort: 8080
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: yamecloud-apps
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: nuwa-controller
  name: kube-nuwa-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: nuwa-controller
  template:
    metadata:
      labels:
        control-plane: nuwa-controller
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: yametech/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: yametech/nuwa-controller:v1.0.1
        name: manager
        volumeMounts:
        - mountPath: /ssl
          name: ssl
          readOnly: true
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - name: ssl
        secret:
          secretName: kube-nuwa-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: kube-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: kube-state-metrics
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: kube-state-metrics
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - image: yametech/kube-state-metrics:v1.9.8
        imagePullPolicy: IfNotPresent
        name: kube-state-metrics
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 200m
            memory: 150Mi
          requests:
            cpu: 10m
            memory: 150Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kube-state-metrics
      serviceAccountName: kube-state-metrics
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: metrics-server
  name: metrics-server
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: metrics-server
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        k8s-app: metrics-server
    spec:
      containers:
      - args:
        - --cert-dir=/tmp
        - --secure-port=4443
        - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
        - --kubelet-use-node-status-port
        - --kubelet-insecure-tls
        image: yametech/metrics-server:v0.4.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /livez
            port: https
            scheme: HTTPS
          periodSeconds: 10
        name: metrics-server
        ports:
        - containerPort: 4443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: https
            scheme: HTTPS
          periodSeconds: 10
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /tmp
          name: tmp-dir
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      schedulerName: default-scheduler
      serviceAccountName: metrics-server
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: service
  name: service
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service
  template:
    metadata:
      labels:
        app: service
    spec:
      containers:
      - args:
        - --registry
        - etcd
        - --registry_address
        - etcd.kube-system.svc.cluster.local:2379
        env:
        - name: IN_CLUSTER
          value: "true"
        image: yametech/service:0.2.1
        imagePullPolicy: Always
        name: service
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: yamecloud-apps
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: shell
  name: shell
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shell
  template:
    metadata:
      labels:
        app: shell
    spec:
      containers:
      - args:
        - --registry
        - etcd
        - --registry_address
        - etcd.kube-system.svc.cluster.local:2379
        env:
        - name: IN_CLUSTER
          value: "true"
        image: yametech/shell:0.2.1
        imagePullPolicy: Always
        name: tekton
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: yamecloud-apps
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tekton
  name: tekton
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tekton
  template:
    metadata:
      labels:
        app: tekton
    spec:
      containers:
      - args:
        - --registry
        - etcd
        - --registry_address
        - etcd.kube-system.svc.cluster.local:2379
        env:
        - name: IN_CLUSTER
          value: "true"
        image: yametech/tekton:0.2.1
        imagePullPolicy: Always
        name: tekton
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: yamecloud-apps
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: watcher
  name: watcher
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - --registry
        - etcd
        - --registry_address
        - etcd.kube-system.svc.cluster.local:2379
        env:
        - name: IN_CLUSTER
          value: "true"
        - name: SUBLIST
          value: ""
        - name: SUBTOPIC
          value: tekton,ovn
        image: yametech/watcher:0.2.1
        imagePullPolicy: Always
        name: watcher
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: yamecloud-apps
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webhook
  name: webhook
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook
  strategy: {}
  template:
    metadata:
      labels:
        app: webhook
    spec:
      containers:
      - args:
        - --registry
        - etcd
        - --registry_address
        - etcd.kube-system.svc.cluster.local:2379
        - --etcd_address
        - etcd.kube-system.svc.cluster.local:2379
        - --in_cluster
        - "true"
        image: yametech/webhook:v0.1.0
        imagePullPolicy: Always
        name: webhook
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: yamecloud-apps
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: workloadplus
  name: workloadplus
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workloadplus
  template:
    metadata:
      labels:
        app: workloadplus
    spec:
      containers:
      - args:
        - --registry
        - etcd
        - --registry_address
        - etcd.kube-system.svc.cluster.local:2379
        env:
        - name: IN_CLUSTER
          value: "true"
        image: yametech/workloadplus:0.2.1
        imagePullPolicy: Always
        name: workloadplus
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: yamecloud-apps
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: workloads
  name: workloads
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workloads
  template:
    metadata:
      labels:
        app: workloads
    spec:
      containers:
      - args:
        - --registry
        - etcd
        - --registry_address
        - etcd.kube-system.svc.cluster.local:2379
        env:
        - name: IN_CLUSTER
          value: "true"
        image: yametech/workloads:0.2.1
        imagePullPolicy: Always
        name: workloads
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: yamecloud-apps
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: tekton-pipelines
    pipeline.tekton.dev/release: v0.11.1
    version: v0.11.1
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tekton-pipelines-controller
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: tekton-pipelines-controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: tekton-pipelines
        pipeline.tekton.dev/release: v0.11.1
        version: v0.11.1
    spec:
      containers:
      - args:
        - -kubeconfig-writer-image
        - yametech/pipeline-kubeconfigwriter:v0.11.1
        - -creds-image
        - yametech/pipeline-creds-init:v0.11.1
        - -git-image
        - yametech/pipeline-git-init:v0.11.1
        - -nop-image
        - tianon/true
        - -shell-image
        - busybox
        - -gsutil-image
        - google/cloud-sdk
        - -entrypoint-image
        - yametech/pipeline-entrypoint:v0.11.1
        - -imagedigest-exporter-image
        - yametech/pipeline-imagedigestexporter:v0.11.1
        - -pr-image
        - yametech/pipeline-pullrequest-init:v0.11.1
        - -build-gcs-fetcher-image
        - yametech/pipeline-gcs-fetcher:v0.11.1
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: CONFIG_ARTIFACT_BUCKET_NAME
          value: config-artifact-bucket
        - name: CONFIG_ARTIFACT_PVC_NAME
          value: config-artifact-pvc
        - name: METRICS_DOMAIN
          value: tekton.dev/pipeline
        image: yametech/pipeline-controller:v0.11.1
        name: tekton-pipelines-controller
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
      serviceAccountName: tekton-pipelines-controller
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: config-logging
        name: config-logging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: webhook-controller
    app.kubernetes.io/name: tekton-pipelines
    pipeline.tekton.dev/release: v0.11.1
    version: v0.11.1
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tekton-pipelines-webhook
      role: webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: tekton-pipelines-webhook
        app.kubernetes.io/component: webhook-controller
        app.kubernetes.io/name: tekton-pipelines
        pipeline.tekton.dev/release: v0.11.1
        role: webhook
        version: v0.11.1
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: WEBHOOK_SERVICE_NAME
          value: tekton-pipelines-webhook
        - name: METRICS_DOMAIN
          value: tekton.dev/pipeline
        image: yametech/pipeline-webhook:v0.11.1
        name: webhook
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8443
          name: https-webhook
        securityContext:
          allowPrivilegeEscalation: false
      serviceAccountName: tekton-pipelines-controller
      tolerations:
      - effect: NoSchedule
        operator: Exists
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      name: prometheus
  serviceName: prometheus
  template:
    metadata:
      labels:
        name: prometheus
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --web.listen-address=0.0.0.0:9090
        - --config.file=/etc/prometheus/prometheus.yaml
        - --storage.tsdb.path=/var/lib/prometheus
        - --storage.tsdb.retention.time=15d
        - --storage.tsdb.retention.size=20GB
        - --storage.tsdb.min-block-duration=2h
        - --storage.tsdb.max-block-duration=2h
        image: yametech/prometheus:v2.26.0
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 10
          timeoutSeconds: 10
        name: prometheus
        ports:
        - containerPort: 9090
          name: web
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 10
          timeoutSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
        - mountPath: /etc/prometheus
          name: config
        - mountPath: /etc/prometheus/rules
          name: rules
        - mountPath: /var/lib/prometheus
          name: data
      initContainers:
      - command:
        - chown
        - -R
        - 65534:65534
        - /var/lib/prometheus
        image: yametech/alpine:3.9
        name: chown
        volumeMounts:
        - mountPath: /var/lib/prometheus
          name: data
      nodeSelector:
        yamecloud.kubernetes.io/node: master
      serviceAccountName: prometheus
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: prometheus-config
        name: config
      - configMap:
          name: prometheus-rules
        name: rules
  volumeClaimTemplates:
  - metadata:
      annotations:
        volume.alpha.kubernetes.io/storage-class: default
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100G
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  labels:
    k8s-app: metrics-server
  name: v1beta1.metrics.k8s.io
spec:
  group: metrics.k8s.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: metrics-server
    namespace: kube-system
  version: v1beta1
  versionPriority: 100
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: debug-agent
  name: debug-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: debug-agent
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: debug-agent
    spec:
      containers:
      - image: yametech/debug-agent:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10027
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: debug-agent
        ports:
        - containerPort: 10027
          hostPort: 10027
          name: http
          protocol: TCP
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /sys/fs/cgroup
          name: cgroup
        - mountPath: /var/lib/lxc
          mountPropagation: Bidirectional
          name: lxcfs
        - mountPath: /var/run/docker.sock
          name: docker
        - mountPath: /run/containerd
          name: runcontainerd
        - mountPath: /run/runc
          name: runrunc
        - mountPath: /var/data
          name: vardata
      dnsPolicy: ClusterFirst
      hostNetwork: true
      hostPID: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - hostPath:
          path: /sys/fs/cgroup
          type: ""
        name: cgroup
      - hostPath:
          path: /var/lib/lxc
          type: DirectoryOrCreate
        name: lxcfs
      - hostPath:
          path: /var/run/docker.sock
          type: ""
        name: docker
      - hostPath:
          path: /var/data
          type: ""
        name: vardata
      - hostPath:
          path: /run/containerd
          type: ""
        name: runcontainerd
      - hostPath:
          path: /run/runc
          type: ""
        name: runrunc
  updateStrategy:
    type: RollingUpdate
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: node-exporter
      phase: prod
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
      labels:
        name: node-exporter
        phase: prod
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --path.procfs=/host/proc
        - --path.sysfs=/host/sys
        - --path.rootfs=/host/root
        - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker|var/lib/containerd|var/lib/containers/.+)($|/)
        - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
        image: yametech/node-exporter:v1.1.2
        name: node-exporter
        ports:
        - containerPort: 9100
          name: metrics
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 24Mi
        volumeMounts:
        - mountPath: /host/proc
          name: proc
          readOnly: true
        - mountPath: /host/sys
          name: sys
          readOnly: true
        - mountPath: /host/root
          name: root
          readOnly: true
      hostPID: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /proc
        name: proc
      - hostPath:
          path: /sys
        name: sys
      - hostPath:
          path: /
        name: root
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: compass
  namespace: kube-system
spec:
  rules:
  - host: compass.ym
    http:
      paths:
      - backend:
          serviceName: compass
          servicePort: 80
        path: /
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: kube-nuwa-webhook
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV0akNDQTU2Z0F3SUJBZ0lVRXYvWHpReTgya2drWlJLL0xmYkhycUFpaFFzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2NqRUxNQWtHQTFVRUJoTUNRMDR4RWpBUUJnTlZCQWdUQ1VkMVlXNW5XbWh2ZFRFU01CQUdBMVVFQnhNSgpSM1ZoYm1kYWFHOTFNUXd3Q2dZRFZRUUtFd05yT0hNeER6QU5CZ05WQkFzVEJsTjVjM1JsYlRFY01Cb0dBMVVFCkF4TVRhM1ZpWlhKdVpYUmxjeTFUYjNWc2JXRjBaVEFlRncweU1EQTFNRE14TURJek1EQmFGdzAwTURBME1qZ3gKTURJek1EQmFNR014Q3pBSkJnTlZCQVlUQWtOT01SSXdFQVlEVlFRSUV3bEhkV0Z1WjFwb2IzVXhFakFRQmdOVgpCQWNUQ1VkMVlXNW5XbWh2ZFRFTU1Bb0dBMVVFQ2hNRGF6aHpNUTh3RFFZRFZRUUxFd1pUZVhOMFpXMHhEVEFMCkJnTlZCQU1UQkc1MWQyRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEUzZvSUEKWnZjNnJlb0lCdHpSUmdXcGF2OFFnQk93d0FLdnlzYmlDTkVpenNZNmkwVWxrV0gyYVFvZHozb3Nrc2ZDTlpxdApRRWtGeHV1SHMvcmRJaW44UzlreFc5UVZEMmZQbldGcFYwcHdTYXpJR0ZwbitwWHBnNGJDYi9acGJvTWdsM1cvClhXNEQvYVRBOE92N3NHOHkwblVldDh5VXRGWHk2eWJ5TnFkY2o4Y2g5TlF5dnhGT2E5anByME9CdURTVEE1a08Kd2lHTm94ZitpVTRUeXZNNGlXUjBwVTV0Y0M1VGYraU9mT0dHNXpaRjg0cEJFYWFFOXRYRVNnVFZhU2swby9BUApSbzJGRFE4dHl6QmJOMWJUUmQvcTNLYVh6UnlmYkdqazNlTTBlRHNFOEo2eXJwUHlNeTdvUHZ3b2VuUStDV3c5ClFabFMzb2hFQVJPcy9rK1ZBZ01CQUFHamdnRlJNSUlCVFRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRQpGRmgzZithV0NRM2pWaG9TOFBDb1pFblR3eTVmTUI4R0ExVWRJd1FZTUJhQUZGSHJpN3JvNVdsRTBOelJsS0NhCnNPcG9YOU4yTUlITkJnTlZIUkVFZ2NVd2djS0NGR3QxWW1VdGQyVmlhRzl2YXkxelpYSjJhV05sZ2lCcmRXSmwKTFhkbFltaHZiMnN0YzJWeWRtbGpaUzVyZFdKbExYTjVjM1JsYllJa2EzVmlaUzEzWldKb2IyOXJMWE5sY25acApZMlV1YTNWaVpTMXplWE4wWlcwdWMzWmpnamRyZFdKbExXTnZiblJ5YjJ4c1pYSXRiV0Z1WVdkbGNpMXRaWFJ5CmFXTnpMWE5sY25acFkyVXVhM1ZpWlMxemVYTjBaVzB1YzNaamhpbHJkV0psTFhkbFltaHZiMnN0YzJWeWRtbGoKWlM1cmRXSmxMWE41YzNSbGJTNXpkbU02TVRRME16QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSa2ZZMExseQpDMzdKQmM4TGZ4amI4RDN6bVZ6UEZXRFF0UXMwOFFEc1Jtd2s4eSt4M2h4OTU4QW5hWmV1WGV6aEVZT3B6ZDZxCm1BODBwamVYR0hNS0x4SXlQOUtJNm1qUlVkZHNwVkNtUVpoS3pOUkpidVRQbnowT3ppanp4SWRjZi9ZK2xGbW8KSDhVcUNvOHNzblA0RmVqTi9hcCsvNTZ2R2JWTFRUZUxVQlF1UE1KRHg0MXpiZ045QlY0bmtyd0JWdkFOeHZzNgowYzRiMFYyR2I5UVVRYXBZTkYvS054c0RTSTl0dEtwcnNGY2VmNmx0akxHTGQreGpIUCsxRGtxcCtna1hYZS9sCkNGVFQvVnpsV1htVTN3QTdNMjlJZTBsT2thY25vQXVDSWwwN2l6d04wbEN6ZDlBM2RzWktmTFJ5ZUZaQnF4QmkKM1lDVnhrM3FjSmZGYkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kube-webhook-service
      namespace: kube-system
      path: /injector-mutating-pods
      port: 1443
  failurePolicy: Ignore
  name: injector.nuwa.nip.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
    scope: Namespaced
  sideEffects: NoneOnDryRun
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV0akNDQTU2Z0F3SUJBZ0lVRXYvWHpReTgya2drWlJLL0xmYkhycUFpaFFzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2NqRUxNQWtHQTFVRUJoTUNRMDR4RWpBUUJnTlZCQWdUQ1VkMVlXNW5XbWh2ZFRFU01CQUdBMVVFQnhNSgpSM1ZoYm1kYWFHOTFNUXd3Q2dZRFZRUUtFd05yT0hNeER6QU5CZ05WQkFzVEJsTjVjM1JsYlRFY01Cb0dBMVVFCkF4TVRhM1ZpWlhKdVpYUmxjeTFUYjNWc2JXRjBaVEFlRncweU1EQTFNRE14TURJek1EQmFGdzAwTURBME1qZ3gKTURJek1EQmFNR014Q3pBSkJnTlZCQVlUQWtOT01SSXdFQVlEVlFRSUV3bEhkV0Z1WjFwb2IzVXhFakFRQmdOVgpCQWNUQ1VkMVlXNW5XbWh2ZFRFTU1Bb0dBMVVFQ2hNRGF6aHpNUTh3RFFZRFZRUUxFd1pUZVhOMFpXMHhEVEFMCkJnTlZCQU1UQkc1MWQyRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEUzZvSUEKWnZjNnJlb0lCdHpSUmdXcGF2OFFnQk93d0FLdnlzYmlDTkVpenNZNmkwVWxrV0gyYVFvZHozb3Nrc2ZDTlpxdApRRWtGeHV1SHMvcmRJaW44UzlreFc5UVZEMmZQbldGcFYwcHdTYXpJR0ZwbitwWHBnNGJDYi9acGJvTWdsM1cvClhXNEQvYVRBOE92N3NHOHkwblVldDh5VXRGWHk2eWJ5TnFkY2o4Y2g5TlF5dnhGT2E5anByME9CdURTVEE1a08Kd2lHTm94ZitpVTRUeXZNNGlXUjBwVTV0Y0M1VGYraU9mT0dHNXpaRjg0cEJFYWFFOXRYRVNnVFZhU2swby9BUApSbzJGRFE4dHl6QmJOMWJUUmQvcTNLYVh6UnlmYkdqazNlTTBlRHNFOEo2eXJwUHlNeTdvUHZ3b2VuUStDV3c5ClFabFMzb2hFQVJPcy9rK1ZBZ01CQUFHamdnRlJNSUlCVFRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRQpGRmgzZithV0NRM2pWaG9TOFBDb1pFblR3eTVmTUI4R0ExVWRJd1FZTUJhQUZGSHJpN3JvNVdsRTBOelJsS0NhCnNPcG9YOU4yTUlITkJnTlZIUkVFZ2NVd2djS0NGR3QxWW1VdGQyVmlhRzl2YXkxelpYSjJhV05sZ2lCcmRXSmwKTFhkbFltaHZiMnN0YzJWeWRtbGpaUzVyZFdKbExYTjVjM1JsYllJa2EzVmlaUzEzWldKb2IyOXJMWE5sY25acApZMlV1YTNWaVpTMXplWE4wWlcwdWMzWmpnamRyZFdKbExXTnZiblJ5YjJ4c1pYSXRiV0Z1WVdkbGNpMXRaWFJ5CmFXTnpMWE5sY25acFkyVXVhM1ZpWlMxemVYTjBaVzB1YzNaamhpbHJkV0psTFhkbFltaHZiMnN0YzJWeWRtbGoKWlM1cmRXSmxMWE41YzNSbGJTNXpkbU02TVRRME16QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSa2ZZMExseQpDMzdKQmM4TGZ4amI4RDN6bVZ6UEZXRFF0UXMwOFFEc1Jtd2s4eSt4M2h4OTU4QW5hWmV1WGV6aEVZT3B6ZDZxCm1BODBwamVYR0hNS0x4SXlQOUtJNm1qUlVkZHNwVkNtUVpoS3pOUkpidVRQbnowT3ppanp4SWRjZi9ZK2xGbW8KSDhVcUNvOHNzblA0RmVqTi9hcCsvNTZ2R2JWTFRUZUxVQlF1UE1KRHg0MXpiZ045QlY0bmtyd0JWdkFOeHZzNgowYzRiMFYyR2I5UVVRYXBZTkYvS054c0RTSTl0dEtwcnNGY2VmNmx0akxHTGQreGpIUCsxRGtxcCtna1hYZS9sCkNGVFQvVnpsV1htVTN3QTdNMjlJZTBsT2thY25vQXVDSWwwN2l6d04wbEN6ZDlBM2RzWktmTFJ5ZUZaQnF4QmkKM1lDVnhrM3FjSmZGYkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kube-webhook-service
      namespace: kube-system
      path: /namespace-mutating-resource
      port: 1443
  failurePolicy: Ignore
  name: namespace.nuwa.nip.io
  rules:
  - apiGroups:
    - ""
    - apps
    - batch
    apiVersions:
    - v1
    - v1beta1
    operations:
    - CREATE
    resources:
    - replicationcontrollers
    - replicasets
    - jobs
    - cronjobs
    - deployments
    - statefulset
    scope: Namespaced
  sideEffects: NoneOnDryRun
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    pipeline.tekton.dev/release: devel
  name: webhook.pipeline.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: tekton-pipelines-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: webhook.pipeline.tekton.dev
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    pipeline.tekton.dev/release: devel
  name: config.webhook.pipeline.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: tekton-pipelines-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: config.webhook.pipeline.tekton.dev
  namespaceSelector:
    matchExpressions:
    - key: pipeline.tekton.dev/release
      operator: Exists
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    pipeline.tekton.dev/release: devel
  name: validation.webhook.pipeline.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: tekton-pipelines-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: validation.webhook.pipeline.tekton.dev
  sideEffects: None
---
---
kind: BaseUser
apiVersion: yamecloud.io/v1
metadata:
  name: admin
spec:
  department_id: admin
  display: admin
  email: laik.lj@me.com
  is_tenant_owner: true
  name: admin
  roles: []
  tenant_id: admin
  password: d033e22ae348aeb5660fc2140aec35850c4da997
---
apiVersion: v1
kind: Namespace
metadata:
  name: admin
---
apiVersion: yamecloud.io/v1
kind: GlobalConfig
metadata:
  name: compass-config
spec:
  helmRepos:
    ingress: https://kubernetes.github.io/ingress-nginx
    jenkins: https://charts.jenkins.io/